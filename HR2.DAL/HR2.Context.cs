//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HR2.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using HR2.EF.DAL;
    
    public partial class HR2PortalEntities : DatabaseContext
    {
        public HR2PortalEntities()
            : base("name=HR2PortalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<CustomizeReport> CustomizeReports { get; set; }
        public virtual DbSet<CustomizeStatusCode> CustomizeStatusCodes { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<DeviceCommand> DeviceCommands { get; set; }
        public virtual DbSet<Device> Devices { get; set; }
        public virtual DbSet<EmployeeCardIssuedDetail> EmployeeCardIssuedDetails { get; set; }
        public virtual DbSet<EmployeeCompOffBroker> EmployeeCompOffBrokers { get; set; }
        public virtual DbSet<EmployeeCompOffRequest> EmployeeCompOffRequests { get; set; }
        public virtual DbSet<EmployeeDocument> EmployeeDocuments { get; set; }
        public virtual DbSet<EmployeeFamilyMember> EmployeeFamilyMembers { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<EmployeesBio> EmployeesBios { get; set; }
        public virtual DbSet<EmployeesLeavesBalance> EmployeesLeavesBalances { get; set; }
        public virtual DbSet<EmployeesTimeSheet> EmployeesTimeSheets { get; set; }
        public virtual DbSet<EmployeeTraining> EmployeeTrainings { get; set; }
        public virtual DbSet<ExcelAttendanceLogs_Report> ExcelAttendanceLogs_Report { get; set; }
        public virtual DbSet<ExcelDeviceLogs_Report> ExcelDeviceLogs_Report { get; set; }
        public virtual DbSet<Holiday> Holidays { get; set; }
        public virtual DbSet<JobTitle> JobTitles { get; set; }
        public virtual DbSet<LeaveType> LeaveTypes { get; set; }
        public virtual DbSet<MasterSetting> MasterSettings { get; set; }
        public virtual DbSet<MessageLog> MessageLogs { get; set; }
        public virtual DbSet<Permission> Permissions { get; set; }
        public virtual DbSet<ProjectActivity> ProjectActivities { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<ShiftRoster> ShiftRosters { get; set; }
        public virtual DbSet<ShiftRosterShift> ShiftRosterShifts { get; set; }
        public virtual DbSet<Shift> Shifts { get; set; }
        public virtual DbSet<SystemUser> SystemUsers { get; set; }
        public virtual DbSet<TimeSheetHour> TimeSheetHours { get; set; }
        public virtual DbSet<Training> Trainings { get; set; }
        public virtual DbSet<UserCompany> UserCompanies { get; set; }
        public virtual DbSet<UserPermission> UserPermissions { get; set; }
        public virtual DbSet<UsersFP> UsersFPs { get; set; }
        public virtual DbSet<UserTokenCach> UserTokenCaches { get; set; }
        public virtual DbSet<Vacancy> Vacancies { get; set; }
        public virtual DbSet<AttendanceLog> AttendanceLogs { get; set; }
        public virtual DbSet<Candidate> Candidates { get; set; }
        public virtual DbSet<DepartmentShift> DepartmentShifts { get; set; }
        public virtual DbSet<Designation> Designations { get; set; }
        public virtual DbSet<DeviceLog> DeviceLogs { get; set; }
        public virtual DbSet<DeviceLogs_1_2017> DeviceLogs_1_2017 { get; set; }
        public virtual DbSet<DeviceLogs_1_2018> DeviceLogs_1_2018 { get; set; }
        public virtual DbSet<DeviceLogs_10_2016> DeviceLogs_10_2016 { get; set; }
        public virtual DbSet<DeviceLogs_10_2017> DeviceLogs_10_2017 { get; set; }
        public virtual DbSet<DeviceLogs_11_2016> DeviceLogs_11_2016 { get; set; }
        public virtual DbSet<DeviceLogs_11_2017> DeviceLogs_11_2017 { get; set; }
        public virtual DbSet<DeviceLogs_12_2016> DeviceLogs_12_2016 { get; set; }
        public virtual DbSet<DeviceLogs_12_2017> DeviceLogs_12_2017 { get; set; }
        public virtual DbSet<DeviceLogs_2_2017> DeviceLogs_2_2017 { get; set; }
        public virtual DbSet<DeviceLogs_2_2018> DeviceLogs_2_2018 { get; set; }
        public virtual DbSet<DeviceLogs_3_2017> DeviceLogs_3_2017 { get; set; }
        public virtual DbSet<DeviceLogs_3_2018> DeviceLogs_3_2018 { get; set; }
        public virtual DbSet<DeviceLogs_4_2017> DeviceLogs_4_2017 { get; set; }
        public virtual DbSet<DeviceLogs_4_2018> DeviceLogs_4_2018 { get; set; }
        public virtual DbSet<DeviceLogs_5_2017> DeviceLogs_5_2017 { get; set; }
        public virtual DbSet<DeviceLogs_5_2018> DeviceLogs_5_2018 { get; set; }
        public virtual DbSet<DeviceLogs_6_2017> DeviceLogs_6_2017 { get; set; }
        public virtual DbSet<DeviceLogs_6_2018> DeviceLogs_6_2018 { get; set; }
        public virtual DbSet<DeviceLogs_7_2016> DeviceLogs_7_2016 { get; set; }
        public virtual DbSet<DeviceLogs_7_2017> DeviceLogs_7_2017 { get; set; }
        public virtual DbSet<DeviceLogs_7_2018> DeviceLogs_7_2018 { get; set; }
        public virtual DbSet<DeviceLogs_8_2016> DeviceLogs_8_2016 { get; set; }
        public virtual DbSet<DeviceLogs_8_2017> DeviceLogs_8_2017 { get; set; }
        public virtual DbSet<DeviceLogs_8_2018> DeviceLogs_8_2018 { get; set; }
        public virtual DbSet<DeviceLogs_9_2016> DeviceLogs_9_2016 { get; set; }
        public virtual DbSet<DeviceLogs_9_2017> DeviceLogs_9_2017 { get; set; }
        public virtual DbSet<DeviceLogs_9_2018> DeviceLogs_9_2018 { get; set; }
        public virtual DbSet<DeviceSetting> DeviceSettings { get; set; }
        public virtual DbSet<EmpAutoLeaveAllotHistory> EmpAutoLeaveAllotHistories { get; set; }
        public virtual DbSet<EmployeeHistory> EmployeeHistories { get; set; }
        public virtual DbSet<EmployeeLeaveCreditHistory> EmployeeLeaveCreditHistories { get; set; }
        public virtual DbSet<EmployeeLeaveEntry> EmployeeLeaveEntries { get; set; }
        public virtual DbSet<EmployeesAudit> EmployeesAudits { get; set; }
        public virtual DbSet<EmployeeShift> EmployeeShifts { get; set; }
        public virtual DbSet<EmployeeSpecialEntry> EmployeeSpecialEntries { get; set; }
        public virtual DbSet<HolidayGroup> HolidayGroups { get; set; }
        public virtual DbSet<LeaveTypeHistory> LeaveTypeHistories { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<MailDetail> MailDetails { get; set; }
        public virtual DbSet<MultiShiftAttendanceLog> MultiShiftAttendanceLogs { get; set; }
        public virtual DbSet<MultiShiftDepartmentShift> MultiShiftDepartmentShifts { get; set; }
        public virtual DbSet<MultiShiftEmployeeShift> MultiShiftEmployeeShifts { get; set; }
        public virtual DbSet<MultiShiftGroup> MultiShiftGroups { get; set; }
        public virtual DbSet<MultiShift> MultiShifts { get; set; }
        public virtual DbSet<ShiftGroup> ShiftGroups { get; set; }
    
        [DbFunction("HR2PortalEntities", "GetExtraHours")]
        public virtual IQueryable<GetExtraHours_Result> GetExtraHours(Nullable<System.DateTime> inTime, Nullable<System.DateTime> outTime)
        {
            var inTimeParameter = inTime.HasValue ?
                new ObjectParameter("InTime", inTime) :
                new ObjectParameter("InTime", typeof(System.DateTime));
    
            var outTimeParameter = outTime.HasValue ?
                new ObjectParameter("OutTime", outTime) :
                new ObjectParameter("OutTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetExtraHours_Result>("[HR2PortalEntities].[GetExtraHours](@InTime, @OutTime)", inTimeParameter, outTimeParameter);
        }
    
        public virtual ObjectResult<Get_IN_OUT_Result> Get_IN_OUT(Nullable<int> employeeId, Nullable<int> month, Nullable<int> year)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_IN_OUT_Result>("Get_IN_OUT", employeeIdParameter, monthParameter, yearParameter);
        }
    
        public virtual int Get_IN_OUT_TIME(Nullable<int> employeeId, Nullable<int> month, Nullable<int> year)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Get_IN_OUT_TIME", employeeIdParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<Get_Month_Result> Get_Month()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Month_Result>("Get_Month");
        }
    
        public virtual ObjectResult<GetAttendance_Result> GetAttendance(string userID, Nullable<int> month, Nullable<int> year)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAttendance_Result>("GetAttendance", userIDParameter, monthParameter, yearParameter);
        }
    }
}
